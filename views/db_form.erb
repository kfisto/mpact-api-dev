<!DOCTYPE html>
<html>
<head>

<script src="/jquery-2.1.1.min.js" type="text/javascript"></script>

<script>

function getUrlParam(param) {
	var url = window.location.search.substring(1); 	// url after '?'
	var params = url.split('&');
	for (var i=0,len=params.length; i < len; i++) {
		var kvp = params[i].split('=');
		if (kvp[0] == param) {
			return decodeURIComponent(kvp[1]);
		}
	}
	return null;
}

function hideMessage() {
	$('#msgline').fadeTo(500, 0);
}

var entries = [],
	requests = [],
	totalReqs = 3;

<% guide_entries_all.each do |entry| %>
	entries.push(<%= entry.to_json %>);
<% end %>

<% @requests = Request.where('"requests"."entry_id" = ?', guide_entries_all.first.id)
	@requests.each do |req| %>

	requests.push(<%= req.to_json %>);

<% end %>

function showMessage(message) {
	$('#msgline').html(message);
	var initialTop = document.body.scrollHeight + 20 + 1,					// scroll height + top padding + 1 for good measure
		newTop 	   = document.body.scrollHeight - $('#msgline').outerHeight() - 15 - 1; 	// initial top - outer height - top padding - 15 - 1;

	$('#msgline').show();
	$('#msgline').offset({ left: 15, top: initialTop });
	$('#msgline').fadeTo(0,0);
	$('#msgline').animate({
		opacity: 1,
		top: newTop
	}, 500);
	setTimeout("hideMessage()", 7000);
}

$(document).ready(function() {

	var edited = getUrlParam('edited'),
		deleted = getUrlParam('deleted'),
		deletedreq = getUrlParam('deletedreq'),
		error = getUrlParam('error'),

		currentEntryIdx = 0,

		addAddNewReqHandler = function() {
			$('#addNewReq').click(function() {
				$('#addNewReq').before(function() {
					totalReqs++;
					newid = "request" + totalReqs;
					console.log(newid);
					return "<br/><input id=\"" + newid + "\" name=\"" + newid + "\" size=\"60\" />";
				});
			});
		},

		deleteReqHandler = function() {
			var btn = this,
				reqId = btn.attributes.dataValue.value,
				url = '/v3/request/' + reqId + '?apikey=1138&&guidekey=<%= params[:key] %>';

			console.log(url);

			$.ajax({
				type: 'DELETE',
				url: url,
				success: function(result) {
					showMessage('Request ' + reqId + ' deleted!');

					getRequests();

					// window.location.href = '/v3/guide/<%= params[:key] %>/entries/edit?apikey=1138&deletedreq=' + reqId;
				},
				failure: function(result) {
					debugger;
				}
			});
		};

	$('#msgline').hide();

	if (deleted !== null) {
		showMessage("Entry " + deleted + " deleted!");
	}

	// if (deletedreq !== null) {
	// 	showMessage("Request " + deletedreq + " deleted!");
	// }

	if (edited !== null) {
		showMessage('Entry ' + edited + ' updated!');
	}

	if (error !== null) {
		$('#msgline').html(error);

		var initialTop = document.body.scrollHeight + 20 + 1,					// scroll height + top padding + 1 for good measure
			newTop = document.body.scrollHeight - $('#msgline').outerHeight() - 15 - 1; 	// initial top - outer height - top padding - 15 - 1;

		$('#msgline').show();
		$('#msgline').offset({ left: 15, top: initialTop });
		$('#msgline').fadeTo(0,0);
		$('#msgline').animate({
			opacity: 1,
			top: newTop
		}, 500);
		setTimeout("hideMessage()", 7000);
	}



	$('#entry').change(function () {

		currentEntryIdx = $('#entry option:selected').index();

		var value = $('select option:selected').val(),
			selectedEntry = $.grep(entries, function(item) {
				return item.id == value;
			})[0];

		$('#id').val(selectedEntry.id);
		$('#name').val(selectedEntry.name);
		$('#image').val(selectedEntry.image);
		$('#location').val(selectedEntry.location);
		$('#entrytype').val(selectedEntry.entrytype);
		$('#bio').val(selectedEntry.bio);
		$('#contentreadonly').val(selectedEntry.data);
		$('#include').prop('checked', selectedEntry.include);

		$('#main').attr('action', '/v3/entry/' + selectedEntry.id + '?apikey=1138');

		getRequests();
	});

	$('#id').val(entries[0].id);
	$('#name').val(entries[0].name);
	$('#image').val(entries[0].image);
	$('#location').val(entries[0].location);
	$('#bio').val(entries[0].bio);
	// $('#contentreadonly').val(entries[0].data);
	$('#entrytype').val(entries[0].entrytype);
	$('#include').prop('checked', entries[0].include);

	$('#guidekey').val(entries[0].guideKey);

	for (var i = 1, len = requests.length || 3; i <= len; i++) {
		$('#requests').append(function() {
			req = "request" + i;
			input = "<input id=\"" + req + "\" name=\"" + req + "\" size=\"60\" />";

			if (requests[i-1]) {
				input += "<input type=\"button\" id=\"delReq" + i + "\" name=\"delReq" + i + "\" datavalue=\"" + requests[i-1].id + "\" value=\"x\" style=\"width: 18px\"/>";

			}

			return input;
		});

		if (requests[i-1]) {
			$('#delReq' + i).click(deleteReqHandler);
		}
	};

	$.each(requests, function(idx, value) {
		$('#request' + (idx+1)).val(requests[idx].request);
	});

	$('#requests').append("<input value=\"Add\" type=\"button\" id=\"addNewReq\" name=\"addNewReq\"/>");
	addAddNewReqHandler();


	$('#main').attr('action', '/v3/entry/' + entries[0].id + '?apikey=1138');

	$('#addBtn').click(function() {

		$('#guide').hide();
		// $('#entry_new').show();
		$('#cancelBtn').show();
		$('#addBtn').hide();

		$('#name').val('');
		$('#image').val('');
		$('#location').val('');
		$('#bio').val('');
		$('#entrytype').val(0);
		$('#include').prop('checked', true);

		$('#name').focus();

		$('#guidekey').val('<%= params[:key] %>');

		// clear requests
		requestsHandler([]);

		$('#main').attr('action', '/v3/entry?apikey=1138')
		
	});

	$('#cancelBtn').click(function() {

		$('#guide').show();
		// $('#entry_new').hide();
		$('#cancelBtn').hide();
		$('#addBtn').show();

		$('#id').val(entries[currentEntryIdx].id);
		$('#name').val(entries[currentEntryIdx].name);
		$('#image').val(entries[currentEntryIdx].image);
		$('#location').val(entries[currentEntryIdx].location);
		$('#bio').val(entries[currentEntryIdx].bio);

		$('#guidekey').val(entries[currentEntryIdx].guideKey);

		// $('#contentreadonly').val(entries[currentEntryIdx].data);
		$('#entrytype').val(entries[currentEntryIdx].entrytype);
		$('#include').prop('checked', entries[currentEntryIdx].include);

		getRequests();

		$('#main').attr('action', '/v3/entry/' + entries[currentEntryIdx].id + '?apikey=1138')
		
	});

	// $('#submitBtn').click(function() {
	// 	$('#submitBtn').prop('disable', true);
	// });

	$('#deleteBtn').click(function() {
		if (confirm('Delete ' + $('#name').val() + ' from the database?')) {

			var url = '/v3/entry/' + $('#entry').val() + '?apikey=1138';

			console.log(url);

			$.ajax({
				type: 'DELETE',
				url: url,
				success: function(result) {
					window.location.href = '/v3/guide/<%= params[:key] %>/entries/edit?apikey=1138&deleted=' + $('#entry').val()
				},
				failure: function(result) {
					debugger;
				}
			});
		} else {
			$('#msgline').html('Delete canceled.');
		}
	});

	$('#copyBtn').click(function() {
		if (confirm('Copy requests from ' + $('#entry').val() + ' to entry: ' + $('#copyToEntry').val() + '?')) {

			var url = '/v3/requests/copy?from=' + $('#entry').val() + '&to=' + $('#copyToEntry').val() + '&apikey=1138';

			console.log(url);

			$.ajax({
				type: 'POST',
				url: url,
				success: function(result) {
					// window.location.href = '/v3/guide/<%= params[:key] %>/entries/edit?apikey=1138&edited=' + $('#copyToEntry').val()

					showMessage('Entry ' + $('#copyToEntry').val() + ' edited!');

				},
				failure: function(result) {
					debugger;
				}
			});
		} else {
			$('#msgline').html('Copy requests canceled.');
		}
	});


	var getRequests = function() {
		var url = '/v3/entry/' + $('#entry').val() + '/requests' + '?apikey=1138';

		console.log(url);

		$.ajax({
			type: 'GET',
			url: url,
			success: function(result) {

				requests = result;
				requestsHandler(requests);

			},
			failure: function(result) {
				debugger;
			}
		});
	}

	var requestsHandler = function(requests) {
		$('#requests').empty();
		for (var i = 1, len = requests.length || 3; i <= len; i++) {
			$('#requests').append(function() {
				req = "request" + i;
				input = "<input id=\"" + req + "\" name=\"" + req + "\" size=\"60\" />";

				if (requests[i-1]) {
					input += "<input type=\"button\" id=\"delReq" + i + "\" name=\"delReq" + i + "\"datavalue=\"" + requests[i-1].id + "\" value=\"x\" style=\"width:18px\"/>";
				}
				return input;
			});

			if (requests[i-1]) {
				$('#delReq' + i).click(deleteReqHandler);
			}
		};

		$.each(requests, function(idx, value) {
			$('#request' + (idx+1)).val(requests[idx].request);
		});

		$('#requests').append("<input value=\"Add\" type=\"button\" id=\"addNewReq\" name=\"addNewReq\"/>");
		addAddNewReqHandler();
	}


});

</script>

<style>
html,body {
	font-family: Helvetica,Arial,sans-serif;
	font-size: .9em;
}
form {
	width: 600px;
}
label {
	display: inline-block;
	width: 100px;
	text-align: right;
	vertical-align: top;
}
input[type="submit"],input[type="reset"] {
	float: right;
}
textarea[disabled] {
	background-color: #ccc;
}

#msgline {
	position: absolute;
	min-width: 200px;
	border-radius: 20px;
	color: white;
	background-color: #323232;
	padding: 10px 20px;
}

input,label {
	margin: 0.25em 0;
}

textarea {
	width: 400px;
}

#requests {
	width: 495px;
}

#requests input {
	width: 400px;
}
#requests input[type="button"] {
	width: 50px;
}

input[type="checkbox"] {
	margin-left: 100px;
}

input[type="checkbox"] + label {
	margin-left: 8px;
}

label.left {
	text-align: left;
}

</style>

</head>
<body>
<form id="main" method="post" enctype="multipart/form-data">
	<label for="entry">Selector</label>
	<select id="entry" name="entry">
		<% guide_entries_all.each do |entry| %>
		<option value="<%= entry[:id] %>"><%= entry[:name] %></option>
		<% end %>
	</select><br/>

	<label for="name">Entry</label>
	<input id="id" name="id" disabled size="3"/>
	<input id="name" name="name"/>
	<input type="button" id="addBtn" value="Add" />
	<input type="button" id="cancelBtn" value="Cancel New" style="display: none;" /><br/>

	<label for="image">Photo</label>
	<input id="image" name="image" size="20" /><br/>

	<label for="location">Location</label>
	<input id="location" name="location" size="30" /><br/>

	<label for="entrytype">Entry Type</label>
	<select id="entrytype" name="entrytype">
		<option value="0">Individual</option>
		<option value="1">Organization</option>
		<option value="2">Church Planter</option>
	</select><br/>

	<label for="bio">Bio</label>
	<textarea id="bio" name="bio" rows="6" cols="60"></textarea><br/>

	<label for="requests">Requests</label>
	<div id="requests" style="display: inline-block;">
	</div><br/>

	<br/>
	<input type="checkbox" id="include" name="include">
	<label for="include" class="left">Include</label><br/>

	<!-- hidden field -->
	<input type="hidden" id="guidekey" name="guidekey" />

	<br/>
	<label for="copyToEntry">Copy requests to entry:</label>
	<select id="copyToEntry" name="copyToEntry">
		<% guide_entries_all.each do |entry| %>
		<option value="<%= entry[:id] %>"><%= entry[:name] %></option>
		<% end %>
	</select>
	<input type="button" id="copyBtn" value="Copy"/>


	<br/>

	<br/><br/>
	<input type="reset"/>
	<input type="submit" id="submitBtn" />

	<!-- <input type="hidden" id="_method" name="_method" value="put"> -->
	<input type="button" id="deleteBtn" value="Delete"/>
</form>

<div id="msgline"></div>

</body>
</html>



